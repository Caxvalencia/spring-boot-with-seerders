buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.github.javafaker:javafaker:0.17.2'
	
	runtimeOnly 'mysql:mysql-connector-java'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

springBoot {
    mainClassName = 'com.example.demo.DemoApplication'
}

task db_seed(dependsOn: 'classes', type: JavaExec) {
	def props = new Properties()

	file("src/main/resources/application.properties").withInputStream {
		props.load(it)
	}

	classpath = project.sourceSets.main.runtimeClasspath + project.sourceSets.main.resources

	main = "${props.getProperty('seeds.springBoot.mainClassName') ?: 'com.example.demo.DatabaseSeeder'}"
	args 'seeder arguments'
	systemProperty 'spring.profiles.active', 'seed'
	systemProperty 'logging.level.root', 'OFF'

	println "Configurated mainClassName: " + main
}
